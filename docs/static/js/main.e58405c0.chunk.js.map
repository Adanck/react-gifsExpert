{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iMAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAoB7C,OACI,uBAAMC,SAZY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAvBc,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,c,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbO,kBAeZA,GAfY,4CAAH,sDCAPS,EAAc,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAa,QAAQC,IAAI,CAACL,KAAIC,QAAOV,QAEpB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAKA,QCFJS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WAEN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAEnBC,YAAY,WAERJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAET,CAACtB,IAEIuB,EDjBwBM,CAAa7B,GAAhCa,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAIpB,OACI,qCACA,qBAAIJ,UAAU,yCAAd,cAA0DlB,KACzDsB,GAAW,mBAAGJ,UAAU,wCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEbjCmB,EAAe,WAAM,MAIM5C,mBAAS,CAAC,gBAJhB,mBAIvB6C,EAJuB,KAIX9C,EAJW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEK8C,EAAWtB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCnBnCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e58405c0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');    \r\n    const handleInputChange = ( e ) => {\r\n        //console.log(e.target.value)\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n\r\n    const handledSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 1) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handledSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=15&api_key=OAFtDeq4t20a50D1Sgm86SqHrsOXVzIi`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs);\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport {GifGridItem} from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"card animate__animated animate__fadeIn\"> { category }</h3>\r\n        {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category).then(imgs => {\r\n\r\n            setTimeout( () => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 800);\r\n        })\r\n    },[category])\r\n    \r\n    return state;\r\n\r\n}","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    //const [categories, setCategories] = useState(['One Punch','Samurai X','Dragon Ball']);\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    // const handledAdd = () => {\r\n    //     //categories.push('Doraemon');\r\n    //     //setCategories( [...categories, 'Doraemon']);\r\n    //     setCategories( cats => [...categories, 'Doraemon']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {/* <button onClick={ handledAdd }>Agregar</button> */}\r\n            <ol>\r\n               \r\n                {categories.map(category =>\r\n                    <GifGrid key={ category} category={category}/>\r\n                )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}